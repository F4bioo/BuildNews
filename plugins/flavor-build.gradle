ext.flavorConfig = {

    def keyApiPropertiesFile = rootProject.file("$rootDir/keyApi.properties")
    def keyApiProperties = new Properties()
    keyApiProperties.load(new FileInputStream(keyApiPropertiesFile))

    flavorDimensions "app"
    productFlavors {
        newsapi {
            dimension "app"
            ext.appIdSuffix = '.newsapi'
            manifestPlaceholders = [appName: "BBC News"]
            buildConfigField 'String', 'QUERY_PARAM', '"apiKey"'
            buildConfigField 'String', 'BASE_URL', '"https://newsapi.org/"'
            buildConfigField "String", "API_KEY", keyApiProperties['NEWS_API_KEY']
        }
        nytimesapi {
            dimension "app"
            ext.appIdSuffix = '.nytimesapi'
            manifestPlaceholders = [appName: "The New York Times"]
            buildConfigField 'String', 'QUERY_PARAM', '"api-key"'
            buildConfigField 'String', 'BASE_URL', '"https://api.nytimes.com/"'
            buildConfigField "String", "API_KEY", keyApiProperties['NY_TIMES_API_KEY']
        }
    }

    sourceSets {
        newsapi {
            res.srcDirs file("$rootDir/flavors/newsapi/src/main/res")
        }
        nytimesapi {
            res.srcDirs file("$rootDir/flavors/nytimesapi/src/main/res")
        }
    }

    productFlavors.all { flavor ->
        if (flavor.hasProperty('appIdSuffix') && isApplicationProject()) {
            flavor.applicationIdSuffix = flavor.appIdSuffix
        }
    }
}

def isApplicationProject() {
    return project.android.class.simpleName.startsWith('BaseAppModuleExtension')
    // in AGP 3.1.x with library modules instead of feature modules:
    // return project.android instanceof com.android.build.gradle.AppExtension
}
